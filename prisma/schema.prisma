// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model client {
  id           Int            @id @default(autoincrement())
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  weBook_users weBook_users[]
}

model walimah_users {
  id           Int            @id @default(autoincrement())
  name         String
  number       String
  city         String?
  email        String?
  bill_image   String?
  code         String?
  usedCode     String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  user_Coupons user_Coupons[]
}

model weBook_users {
  id        Int      @id @default(autoincrement())
  name      String
  text      String
  image     String
  client_id Int
  client    client   @relation(fields: [client_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Coupons {
  id           Int            @id @default(autoincrement())
  name         String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
  user_Coupons user_Coupons[]
}

model user_Coupons {
  id        Int           @id @default(autoincrement())
  user_id   Int
  user      walimah_users @relation(fields: [user_id], references: [id], onDelete: Cascade)
  coupon_id Int
  coupon    Coupons       @relation(fields: [coupon_id], references: [id])
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now()) @updatedAt
}
